<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.apache.hc.core5.http.HttpStatus"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="jakarta.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.CitzenService.repositories.CitizenRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.VaccinationCenter.Repo.CenterRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.VaccinationCenter.Model.RequiredResponse"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.VaccinationCenter.Entity.VaccinationCenter"/>
    <fullyQualifiedTypeName name="java.awt.List"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.CitzenService.Entity.Citizen"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.properties.ConfigurationProperties"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.limits_service.configuration.Configuration"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.limits_service.limitservice.bean.Limits"/>
    <fullyQualifiedTypeName name="com.mahesh.microservices.limits_service.configurations.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.microservices.currencyexchangeservice.repository.CurrencyExchangeRepository"/>
    <fullyQualifiedTypeName name="com.microservices.currencyexchangeservice.controller.CurrencyExchange"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.microservices.currencyconversionservice.controller.CurrencyConversion"/>
    <fullyQualifiedTypeName name="com.microservices.currencyconversionservice.CurrencyExchangeProxy"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.PredicateSpec"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.Buildable"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.Route"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GlobalFilter"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="com.microservices.apigateway.LoggingFilter"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
</qualifiedTypeNameHistroy>
